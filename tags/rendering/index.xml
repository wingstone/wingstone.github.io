<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Rendering on wingstone's blog</title><link>/tags/rendering/</link><description>Recent content in Rendering on wingstone's blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 28 Sep 2020 12:18:24 +0000</lastBuildDate><atom:link href="/tags/rendering/index.xml" rel="self" type="application/rss+xml"/><item><title>皮肤渲染——Preintegrated Subsurface Scattering</title><link>/posts/pi-fu-xuan-ran-zhi-preintegrated-subsurface-scattering/</link><pubDate>Mon, 28 Sep 2020 12:18:24 +0000</pubDate><guid>/posts/pi-fu-xuan-ran-zhi-preintegrated-subsurface-scattering/</guid><description>&lt;p>预积分皮肤散射主要解决三种皮肤散射情况：&lt;/p>
&lt;ol>
&lt;li>表面弯曲引起的散射（Surface Curvature）；&lt;/li>
&lt;li>表面小凸起引起的散射（Small Surface Bumps）；&lt;/li>
&lt;li>投影边缘引起的散射（Shadows）；&lt;/li>
&lt;li>皮肤背面的透射问题（Translucency）（自己添加的）；&lt;/li>
&lt;/ol></description></item><item><title>头发渲染——Kajiya model</title><link>/posts/tou-fa-xuan-ran-zhi-kajiya-model/</link><pubDate>Wed, 16 Sep 2020 12:19:32 +0000</pubDate><guid>/posts/tou-fa-xuan-ran-zhi-kajiya-model/</guid><description>&lt;p>关键点：采用多边形建模，进行深度排序修正渲染顺序（因为半透问题），AO去模拟自阴影，两层高光，采用Tangent向量代替N进行高光计算；&lt;/p></description></item></channel></rss>