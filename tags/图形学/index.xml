<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>图形学 on wingstone's blog</title><link>/tags/%E5%9B%BE%E5%BD%A2%E5%AD%A6/</link><description>Recent content in 图形学 on wingstone's blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 30 Sep 2020 13:10:15 +0000</lastBuildDate><atom:link href="/tags/%E5%9B%BE%E5%BD%A2%E5%AD%A6/index.xml" rel="self" type="application/rss+xml"/><item><title>贴图技术——Parallax Mapping（视差贴图）</title><link>/posts/texture-technique-parallax-mappingshi-chai-tie-tu/</link><pubDate>Wed, 30 Sep 2020 13:10:15 +0000</pubDate><guid>/posts/texture-technique-parallax-mappingshi-chai-tie-tu/</guid><description>&lt;p>视差贴图属于位移贴图(Displacement Mapping)技术的一种，它对根据储存在纹理中的几何信息对顶点进行位移或偏移。一般使用位移贴图之前，需要对模型进行细分（细分着色器），然后进行顶点位移；&lt;/p></description></item><item><title>皮肤渲染——Preintegrated Subsurface Scattering</title><link>/posts/pi-fu-xuan-ran-zhi-preintegrated-subsurface-scattering/</link><pubDate>Mon, 28 Sep 2020 12:18:24 +0000</pubDate><guid>/posts/pi-fu-xuan-ran-zhi-preintegrated-subsurface-scattering/</guid><description>&lt;p>预积分皮肤散射主要解决三种皮肤散射情况：&lt;/p>
&lt;ol>
&lt;li>表面弯曲引起的散射（Surface Curvature）；&lt;/li>
&lt;li>表面小凸起引起的散射（Small Surface Bumps）；&lt;/li>
&lt;li>投影边缘引起的散射（Shadows）；&lt;/li>
&lt;li>皮肤背面的透射问题（Translucency）（自己添加的）；&lt;/li>
&lt;/ol></description></item><item><title>头发渲染——Kajiya model</title><link>/posts/tou-fa-xuan-ran-zhi-kajiya-model/</link><pubDate>Wed, 16 Sep 2020 12:19:32 +0000</pubDate><guid>/posts/tou-fa-xuan-ran-zhi-kajiya-model/</guid><description>&lt;p>关键点：采用多边形建模，进行深度排序修正渲染顺序（因为半透问题），AO去模拟自阴影，两层高光，采用Tangent向量代替N进行高光计算；&lt;/p></description></item><item><title>图形学资源汇总</title><link>/posts/tu-xing-xue-zi-yuan-tui-jian/</link><pubDate>Tue, 15 Sep 2020 16:10:15 +0000</pubDate><guid>/posts/tu-xing-xue-zi-yuan-tui-jian/</guid><description>&lt;p>图形学学习资源推荐，包含了学习网站，学习书记，开源项目等等；&lt;/p></description></item><item><title>Pipeline——Render Pipeline/Path（渲染管线/路径）</title><link>/posts/xuan-ran-guan-xian/</link><pubDate>Mon, 14 Sep 2020 14:51:39 +0000</pubDate><guid>/posts/xuan-ran-guan-xian/</guid><description>&lt;p>Render Path称之为渲染路径更为合适，实际上指渲染一帧所要走的流程，这个流程主要用来处理光照，以及后处理等；常见的有Forward/Deferred Rendering；以及其改版Forward+、Tiled Based Deferred Rendering、Clustered Shading；以及更灵活的Frame Graph（寒霜引擎）、SRP（Unity引擎）；&lt;/p></description></item><item><title>Pipeline——GPU Graphic Pipeline（图形管线）</title><link>/posts/gpu-graphic-pipeline/</link><pubDate>Sun, 13 Sep 2020 09:14:06 +0000</pubDate><guid>/posts/gpu-graphic-pipeline/</guid><description>&lt;h2 id="管线介绍">管线介绍&lt;/h2>
&lt;p>所谓管线就是一个流程，针对硬件来说，处理一个图元有一个硬件渲染流程&lt;strong>Graphic Pipeline（图形管线）&lt;/strong>；针对实际应用来说，渲染一帧画面也需要一个渲染流程&lt;strong>Render Pipeline/Path（渲染管线/路径）&lt;/strong>；Graphic Pipeline处于更加低级的渲染层次，是渲染一个物体必走的渲染流程；&lt;/p></description></item><item><title>Opengl Vertex Interpolation</title><link>/posts/opengl-vertex-interpolation/</link><pubDate>Thu, 10 Sep 2020 14:39:18 +0000</pubDate><guid>/posts/opengl-vertex-interpolation/</guid><description>&lt;p>OpenGL中关于插值问题&lt;/p></description></item><item><title>Monte Carlo Integration</title><link>/posts/monte-carlo-integration/</link><pubDate>Sun, 06 Sep 2020 14:35:52 +0000</pubDate><guid>/posts/monte-carlo-integration/</guid><description>&lt;p>蒙特卡洛积分的简短介绍，以及PBRT中常用的函数分布；&lt;/p></description></item><item><title>Mathematics about camera in graphics（图形学中关于相机的数学）</title><link>/posts/mathematics-about-camera-in-3d-game-engine/</link><pubDate>Thu, 18 Jun 2020 14:34:51 +0000</pubDate><guid>/posts/mathematics-about-camera-in-3d-game-engine/</guid><description>&lt;p>以OpenGL中的右手坐标系为例，介绍引擎中和各种应用中跟相机有关的数学；&lt;/p></description></item></channel></rss>